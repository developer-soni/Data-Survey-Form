{"version":3,"sources":["logo.svg","ResultVerificationForm/GoogleMap.jsx","ResultVerificationForm/index.js","DataSurveyForm/index.js","App.js","reportWebVitals.js","index.js"],"names":["GoogleMap","props","useEffect","Axios","get","surveyFormObject","address","then","data","console","log","style","height","width","defaultCenter","lat","lng","defaultZoom","className","backgroundColor","cursor","title","ResultVerificationForm","Card","Header","as","Body","Row","Col","md","Table","striped","bordered","hover","firstName","lastName","userTitle","heightFeet","heightInch","phone","email","service","faceBook","monthlyBudget","termsAgree","validationSchema","yup","max","required","min","addressZipCode","oneOf","DataSurveyForm","useState","loading","setLoading","surveyFormData","setSurveyFormData","formik","useFormik","initialValues","heightNo","reCaptcha","onSubmit","values","setTimeout","localStorage","setItem","Container","Object","keys","length","bg","text","handleSubmit","isSubmitting","sm","marginBottom","TextField","fullWidth","id","name","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","select","variant","MenuItem","type","multiline","rows","FormLabel","component","FormControlLabel","control","Checkbox","checked","href","FormHelperText","color","textAlign","marginLeft","sitekey","Button","Spinner","animation","size","role","padding","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9cb0744.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component, useEffect } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport Axios from \"axios\";\r\n\r\nexport default function GoogleMap(props) {\r\n\r\n  useEffect(() => {\r\n    Axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${props?.surveyFormObject?.address}&key=AIzaSyA16d9FJFh__vK04jU1P64vnEpPc3jenec`)\r\n      .then(data => console.log(data));\r\n\r\n  }, [])\r\n  //     https://maps.googleapis.com/maps/api/geocode/json?address=1600+Amphitheatre+Parkway,\r\n  // +Mountain+View,+CA&key=YOUR_API_KEY\r\n  return (\r\n    // Important! Always set the container height explicitly\r\n    <div style={{ height: '50vh', width: '100%' }}>\r\n      <GoogleMapReact\r\n        // bootstrapURLKeys={{ key: /* YOUR KEY HERE */ }}\r\n        defaultCenter={{\r\n          lat: 59.95,\r\n          lng: 30.33\r\n        }}\r\n        defaultZoom={11}\r\n      >\r\n        <div className=\"marker\"\r\n          style={{ backgroundColor: 'red', cursor: 'pointer' }}\r\n          title={\"current location\"}\r\n        />\r\n      </GoogleMapReact>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Badge,\r\n  Table,\r\n} from \"react-bootstrap\";\r\nimport GoogleMap from \"./GoogleMap\";\r\n\r\nexport default function ResultVerificationForm(props) {\r\n  const { surveyFormObject } = props;\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header as=\"h5\">Result Verification</Card.Header>\r\n      <Card.Body>\r\n        <Row>\r\n          <Col md={12}>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n                <tr>\r\n                  <th>#Input</th>\r\n                  <th>#Your Answer</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>First Name</td>\r\n                  <td>{surveyFormObject?.firstName}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Last Name</td>\r\n                  <td>{surveyFormObject?.lastName}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Title</td>\r\n                  <td>{surveyFormObject?.userTitle}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Height</td>\r\n                  <td>{surveyFormObject?.heightFeet && surveyFormObject?.heightFeet + \" Feet \"} {surveyFormObject?.heightInch && surveyFormObject?.heightInch + \" Inch\"}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Phone</td>\r\n                  <td>{surveyFormObject?.phone}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Email</td>\r\n                  <td>{surveyFormObject?.email}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Service</td>\r\n                  <td>\r\n                  {surveyFormObject?.service?.phone && \"Phone,\"}\r\n                  {surveyFormObject?.service?.email && \"Email, \"}\r\n                  {surveyFormObject?.service?.faceBook && \"Facebook \"}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Monthly budget</td>\r\n                  <td>{surveyFormObject?.monthlyBudget}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Terms & Conditions</td>\r\n                  <td>\r\n                    {surveyFormObject?.termsAgree ? \"Agree\" : \"Not Agree\"}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useFormik, Field } from \"formik\";\r\nimport {\r\n  TextField,\r\n  MenuItem,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  FormLabel,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport * as yup from \"yup\";\r\nimport { Card, Container, Row, Col, Spinner, Button } from \"react-bootstrap\";\r\nimport ResultVerificationForm from \"../ResultVerificationForm\";\r\nimport GoogleMap from \"../ResultVerificationForm/GoogleMap\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\nconst validationSchema = yup.object({\r\n  lastName: yup\r\n    .string()\r\n    .max(40, \"Last Name should be of minimum 40 characters length\")\r\n    .required(\"Last Name is required\"),\r\n  firstName: yup\r\n    .string()\r\n    .max(40, \"First Name should be of minimum 40 characters length\")\r\n    .required(\"First Name is required\"),\r\n  userTitle: yup.string().required(\"Select user title\"),\r\n  email: yup\r\n    .string()\r\n    .email(\"Enter a valid email\")\r\n    .required(\"Email is required\"),\r\n  phone: yup\r\n    .string()\r\n    .min(10, \"Phone no must be 10 digit\")\r\n    .max(10, \"Phone no must be 10 digit\")\r\n    .required(\"Phone no is required\"),\r\n  addressZipCode: yup\r\n    .string()\r\n    .min(5, \"Zip Code must be 5 digit\")\r\n    .max(5, \"Zip Code must be 5 digit\"),\r\n  termsAgree: yup.boolean().oneOf([true], \"Terms must be required\"),\r\n});\r\n\r\nexport default function DataSurveyForm() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [surveyFormData, setSurveyFormData] = useState({});\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      lastName: \"\",\r\n      firstName: \"\",\r\n      userTitle: \"\",\r\n      heightNo: \"\",\r\n      heightInch: \"\",\r\n      heightFeet: \"\",\r\n      height: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      address: \"\",\r\n      service: {\r\n        phone: false,\r\n        email: false,\r\n        faceBook: false,\r\n      },\r\n      addressZipCode: \"\",\r\n      monthlyBudget: \"\",\r\n      termsAgree: false,\r\n      reCaptcha: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      setLoading(true);\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n        console.log(values);\r\n        localStorage.setItem(\"SurveyFormData\", values);\r\n        // alert(JSON.stringify(values, null, 2));\r\n        setSurveyFormData(values);\r\n      }, 500);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      {Object.keys(surveyFormData).length > 0\r\n        ? \"CSC 642 848 Fall 2021 Individual Assignment Dev Soni\"\r\n        : \"CSC 642 848 Fall 2021 Individual Assignment Dev Soni\"}\r\n      {\r\n\r\n      }\r\n      <Row>\r\n        <Col md={6}>\r\n          <Card bg={\"Light\"} text={\"dark\"} className=\"mb-2\">\r\n            <form onSubmit={formik.handleSubmit}>\r\n              {!formik.isSubmitting ? (\r\n                <>\r\n                  <Card.Header as=\"h5\">\r\n                    {Object.keys(surveyFormData).length > 0\r\n                      ? \"Result Verification\"\r\n                      : \"Survey Form\"}\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Row>\r\n                      <Col md={6} sm={12} style={{ marginBottom: \"1rem\" }}>\r\n                        <TextField\r\n                          fullWidth\r\n                          id=\"firstName\"\r\n                          name=\"firstName\"\r\n                          label=\"First Name*\"\r\n                          value={formik.values.firstName}\r\n                          onChange={formik.handleChange}\r\n                          error={\r\n                            formik.touched.firstName &&\r\n                            Boolean(formik.errors.firstName)\r\n                          }\r\n                          helperText={\r\n                            formik.touched.firstName && formik.errors.firstName\r\n                          }\r\n                        />\r\n                      </Col>\r\n                      <Col md={6} sm={12} style={{ marginBottom: \"1rem\" }}>\r\n                        <TextField\r\n                          fullWidth\r\n                          id=\"lastName\"\r\n                          name=\"lastName\"\r\n                          label=\"Last Name*\"\r\n                          value={formik.values.lastName}\r\n                          onChange={formik.handleChange}\r\n                          error={\r\n                            formik.touched.lastName &&\r\n                            Boolean(formik.errors.lastName)\r\n                          }\r\n                          helperText={\r\n                            formik.touched.lastName && formik.errors.lastName\r\n                          }\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col md={6} sm={4} style={{ marginBottom: \"1rem\" }}>\r\n                        <TextField\r\n                          select\r\n                          id=\"userTitle\"\r\n                          name=\"userTitle\"\r\n                          label=\"Title\"\r\n                          value={formik.values.userTitle}\r\n                          onChange={formik.handleChange}\r\n                          error={\r\n                            formik.touched.userTitle &&\r\n                            Boolean(formik.errors.userTitle)\r\n                          }\r\n                          helperText={\r\n                            formik.touched.userTitle && formik.errors.userTitle\r\n                          }\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                        >\r\n                          <MenuItem value={\"\"}>Select Title</MenuItem>\r\n                          <MenuItem value={\"none\"}>None</MenuItem>\r\n                          <MenuItem value={\"student\"}>Student</MenuItem>\r\n                          <MenuItem value={\"professor\"}>Professor</MenuItem>\r\n                          <MenuItem value={\"staff\"}>Staff</MenuItem>\r\n                          <MenuItem value={\"retired\"}>Retired</MenuItem>\r\n                        </TextField>\r\n                      </Col>\r\n\r\n                      <Col md={3} sm={4} style={{ marginBottom: \"1rem\" }}>\r\n                        <TextField\r\n                          fullWidth\r\n                          id=\"heightFeet\"\r\n                          name=\"heightFeet\"\r\n                          label=\"Height in Feet\"\r\n                          value={formik.values.heightFeet}\r\n                          onChange={formik.handleChange}\r\n                        />\r\n                        {/* <TextField\r\n                            select\r\n                            id=\"height\"\r\n                            name=\"heightFeet\"\r\n                            label=\"Height in Feet\"\r\n                            value={formik.values.height}\r\n                            onChange={formik.handleChange}\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                          >\r\n                            <MenuItem value={\"\"}>Select Height</MenuItem>\r\n                            <MenuItem value={\"feet\"}>Feet</MenuItem>\r\n                            <MenuItem value={\"inches\"}>Inches</MenuItem>\r\n                          </TextField> */}\r\n                      </Col>\r\n                      <Col md={3} sm={4} >\r\n                        <TextField\r\n                          fullWidth\r\n                          id=\"heightInch\"\r\n                          name=\"heightInch\"\r\n                          label=\"Height in inch\"\r\n                          value={formik.values.heightInch}\r\n                          onChange={formik.handleChange}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Col sm={12} style={{ marginBottom: \"1rem\" }}>\r\n                      <TextField\r\n                        fullWidth\r\n                        id=\"phone\"\r\n                        name=\"phone\"\r\n                        label=\"Phone No.\"\r\n                        type=\"number\"\r\n                        value={formik.values.phone}\r\n                        onChange={formik.handleChange}\r\n                        error={\r\n                          formik.touched.phone && Boolean(formik.errors.phone)\r\n                        }\r\n                        helperText={formik.touched.phone && formik.errors.phone}\r\n                      />\r\n                    </Col>\r\n\r\n                    <Col sm={12} style={{ marginBottom: \"1rem\" }}>\r\n                      <TextField\r\n                        multiline\r\n                        rows={2}\r\n                        fullWidth\r\n                        id=\"address\"\r\n                        name=\"address\"\r\n                        label=\"Address*\"\r\n                        value={formik.values.address}\r\n                        onChange={formik.handleChange}\r\n                        error={\r\n                          formik.touched.address &&\r\n                          Boolean(formik.errors.address)\r\n                        }\r\n                        helperText={\r\n                          formik.touched.address && formik.errors.address\r\n                        }\r\n                      />\r\n                    </Col>\r\n                    <Col sm={12} style={{ marginBottom: \"1rem\" }}>\r\n                      <TextField\r\n                        fullWidth\r\n                        id=\"addressZipCode\"\r\n                        name=\"addressZipCode\"\r\n                        label=\"Zip Code*\"\r\n                        type=\"number\"\r\n                        value={formik.values.addressZipCode}\r\n                        onChange={formik.handleChange}\r\n                        error={\r\n                          formik.touched.addressZipCode &&\r\n                          Boolean(formik.errors.addressZipCode)\r\n                        }\r\n                        helperText={\r\n                          formik.touched.addressZipCode &&\r\n                          formik.errors.addressZipCode\r\n                        }\r\n                      />\r\n                    </Col>\r\n                    <Col sm={12} style={{ marginBottom: \"1rem\" }}>\r\n                      {/* <TextField\r\n                                fullWidth\r\n                                id=\"addressZipCode\"\r\n                                name=\"addressZipCode\"\r\n                                label=\"Zip Code*\"\r\n                                type=\"number\"\r\n                                value={formik.values.addressZipCode}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.addressZipCode && Boolean(formik.errors.addressZipCode)}\r\n                                helperText={formik.touched.addressZipCode && formik.errors.addressZipCode}\r\n                            /> */}\r\n                      <FormLabel component=\"legend\">Services</FormLabel>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            id=\"email\"\r\n                            checked={formik.values.service.email}\r\n                            name=\"service.email\"\r\n                            value={formik.values.service.email}\r\n                            onChange={formik.handleChange}\r\n                          />\r\n                        }\r\n                        label=\"E-mail\"\r\n                      />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            checked={formik.values.service.phone}\r\n                            id=\"phone\"\r\n                            name=\"service.phone\"\r\n                            value={formik.values.service.phone}\r\n                            onChange={formik.handleChange}\r\n                          />\r\n                        }\r\n                        label=\"Phone\"\r\n                      />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            id=\"faceBook\"\r\n                            checked={formik.values.service.faceBook}\r\n                            name=\"service.faceBook\"\r\n                            value={formik.values.service.faceBook}\r\n                            onChange={formik.handleChange}\r\n                          />\r\n                        }\r\n                        label=\"Facebook\"\r\n                      />\r\n                    </Col>\r\n                    <Row>\r\n                      <Col md={6} sm={12} style={{ marginBottom: \"1rem\" }}>\r\n                        <TextField\r\n                          select\r\n                          id=\"monthlyBudget\"\r\n                          name=\"monthlyBudget\"\r\n                          label=\"Monthly Budget\"\r\n                          value={formik.values.monthlyBudget}\r\n                          onChange={formik.handleChange}\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                        >\r\n                          <MenuItem value={\"\"}>\r\n                            Select your Monthly budget\r\n                          </MenuItem>\r\n                          <MenuItem value={\"less than $50\"}>\r\n                            less than $50\r\n                          </MenuItem>\r\n                          <MenuItem value={\"between $50 and $100\"}>\r\n                            between $50 and $100\r\n                          </MenuItem>\r\n                          <MenuItem value={\"above $100\"}>above $100</MenuItem>\r\n                        </TextField>\r\n                      </Col>\r\n                      <Col md={6} sm={12} style={{ marginBottom: \"1rem\" }}>\r\n                        <TextField\r\n                          fullWidth\r\n                          id=\"email\"\r\n                          name=\"email\"\r\n                          label=\"Email\"\r\n                          value={formik.values.email}\r\n                          onChange={formik.handleChange}\r\n                          error={\r\n                            formik.touched.email && Boolean(formik.errors.email)\r\n                          }\r\n                          helperText={\r\n                            formik.touched.email && formik.errors.email\r\n                          }\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col md={4}>\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={formik.values.termsAgree}\r\n                              id=\"termsAgree\"\r\n                              name=\"termsAgree\"\r\n                              value={formik.values.termsAgree}\r\n                              onChange={formik.handleChange}\r\n                              error={Boolean(formik.errors.termsAgree)}\r\n                              helperText={formik.errors.termsAgree}\r\n                            />\r\n                          }\r\n                          label={\r\n                            <a href=\"javascript:void(0)\">I Agree to terms*</a>\r\n                          }\r\n                        />\r\n                        {Boolean(formik.errors.termsAgree) && (\r\n                          <FormHelperText style={{ color: \"red\" }}>\r\n                            {formik.errors.termsAgree}\r\n                          </FormHelperText>\r\n                        )}\r\n                      </Col>\r\n                      <Col md={8} >\r\n                        <ReCAPTCHA\r\n                          style={{ textAlign: 'right', marginLeft: 'auto' }}\r\n                          name=\"reCaptcha\"\r\n                          sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\r\n                          onChange={formik.handleChange}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <br />\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                      {loading && (\r\n                        <Spinner\r\n                          as=\"span\"\r\n                          animation=\"border\"\r\n                          size=\"sm\"\r\n                          role=\"status\"\r\n                          aria-hidden=\"true\"\r\n                        />\r\n                      )}\r\n                      <span>{loading ? \"loading...\" : \"Verify\"}</span>\r\n                    </Button>\r\n                  </Card.Body>\r\n                </>\r\n              ) : (\r\n                formik.isSubmitting &&\r\n                Object.keys(surveyFormData).length > 0 && (\r\n                  <ResultVerificationForm surveyFormObject={surveyFormData} />\r\n                )\r\n              )}\r\n            </form>\r\n          </Card>\r\n        </Col>\r\n        <Col md={6}>\r\n          {Object.keys(surveyFormData).length > 0 && (\r\n            <div style={{ padding: \"2rem\" }}>\r\n              <p>\r\n                {\" \"}\r\n                <h5>Address:</h5>\r\n                {surveyFormData?.address} <br />\r\n                {surveyFormData?.addressZipCode}\r\n              </p>\r\n              <GoogleMap\r\n                surveyFormObject={surveyFormData} />\r\n            </div>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport DataSurveyForm from './DataSurveyForm';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a> */}\n        <DataSurveyForm/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}